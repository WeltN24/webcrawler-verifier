buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}
plugins {
    id "com.jfrog.bintray" version "1.8.0"
}
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java'

group = "de.welt"
version = "0.0." + (System.getenv('BUILD_NUMBER') != null ? System.getenv('BUILD_NUMBER') : "local-SNAPSHOT")

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '23.6-jre'
    compile group: 'dnsjava', name: 'dnsjava', version: '2.1.8'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.2'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.0'
    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: '1.0.0'

}

junitPlatform {
    platformVersion '1.0.2' // optional, defaults to plugin version
    logManager 'org.apache.logging.log4j.jul.LogManager'
    reportsDir file('build/test-results/junit-platform') // this is the default
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_PASS')
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'webcrawler-verifier'
        name = 'webcrawler-verifier'
        userOrg = 'welt'
        licenses = ['MIT']
        websiteUrl = 'https://github.com/WeltN24/webcrawler-verifier'
        vcsUrl = 'https://github.com/WeltN24/webcrawler-verifier.git'
        issueTrackerUrl = 'https://github.com/WeltN24/webcrawler-verifier/issues'
//        githubRepo = 'WeltN24/webcrawler-verifier'
//        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        publicDownloadNumbers = true
        version {
            name = rootProject.version

        }
    }
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "thisismana"
            name "Matthias Naber"
            email "matthias.naber@weltn24.de"
        }
    }

    scm {
        url "https://github.com/WeltN24/webcrawler-verifier.git"
    }
}